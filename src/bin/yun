#!/usr/bin/env node

import Promise from 'bluebird';
global.Promise = Promise;
import cheerio from 'cheerio';

var path = require('path');
var fs = require('fs-extra');
let { version } = require('../package.json');

var lib = require('../lib');

var debug = require('debug')('yun:cli');
var argv = require('minimist')(process.argv.slice(2), {
  alias: {
    h: 'help',
    c: 'concurrency',
    f: 'format'
  },
  default: {
    concurrency: 5,
    format: ':name/:singer - :songName.:ext'
  }
});

if (argv._.length === 0 || argv.help) {
  console.log(`
  网易云音乐 歌单/专辑 下载器 v${ version }

  使用:
    yun [选项] <地址>

  选项:
    -h,--help         查看此帮助信息
    -c,--concurrency  设置同时下载数量, 默认5
    -f,--format       设置文件格式, 默认 ':name/:singer - :songName.:ext'

  示例:
    # 10首同时下载
    yun -c 10 http://music.163.com/#/playlist?id=12583200

    # 下载格式为 '歌手 - 歌名'
    yun -f ':singer - :songName.:ext' http://music.163.com/#/playlist?id=12583200
  `);
  process.exit(1);
}

// url
var url = argv._[0];

// concurrency
var concurrency = argv.concurrency;

// format
var format = argv.format;

co(function*() {
  url = lib.normalizeUrl(url);
  var html = yield lib.getHtml(url);
  var $ = cheerio.load(html, {
    decodeEntities: false
  });

  // 基本信息
  var name = lib.getTitle($, url);
  var songs = yield lib.getSongs($, url);
  debug('songs : %j', songs);
  var start = Date.now();
  console.log(`正在下载『${ name }』,请稍候...`);

  // 开始下载
  yield Promise.map(songs, function(song) {
    // 根据格式获取所需文件名
    var filename = lib.getFileName({
      format: format,
      song: song,
      url: url,
      name: name
    });
    // return console.log(filename);

    // 下载
    return lib.downloadSong(song.url, filename, song, songs.length);
  }, {
    concurrency: concurrency
  });

  console.log('下载完成,耗时%s秒', (Date.now() - start) / 1000);
});